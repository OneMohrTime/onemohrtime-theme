/* ==========================================================================
	Alert
========================================================================== */

.c-alert {
	position: relative;
	display: none;
	padding: 0.5em;
	text-align: center;
	background-color: $black;
	color: $white;

	&.is-active {
		display: block;
		transition: transform $speed, opacity $speed;
	}

	&.not-active {
		display: none;
		transform: translateY(-100%);
		opacity: 0;
	}

	@include media(">=screen540") {
		&.is-active {
			display: flex;
			align-items: center;
			justify-content: center;
			column-gap: 0.75em;
		}
	}
}

.c-alert__text {
	margin-bottom: 0;
	line-height: $heading-line-height;
}

.c-alert__link {
	// @include btn-style(); not yet referenced
	padding: 2px 8px;
	font-family: $font-header;
	font-size: .875em;
	font-weight: 700;
	letter-spacing: 0.5px;
	text-align: center;
	text-transform: uppercase;
	line-height: $heading-line-height !important;
	border: 2px solid $white--dark;
	border-radius: $base-border-radius;

	&::before {
		display: none !important;
	}

	// hover, focus
	@include hocus {
		transition: all $speed;
		background-color: transparent;
		color: inherit;
	}

	&:active {
		background-color: $black;
		color: $white;
	}
}

.c-alert__close {
	position: absolute;
	top: 50%;
	right: $gutter;
	width: 10px;
	height: 10px;
	background-color: $white;
}

// document.addEventListener("DOMContentLoaded", function() {
//     const alertBar = document.querySelector(".c-alert");
//     const closeBtn = document.querySelector(".close-button");

//     closeBtn.addEventListener("click", function() {
//         // Add the "closed" class to trigger the closing animation
//         alertBar.classList.add("closed");

//         // After the animation is complete (use the 'transitionend' event),
//         // remove the "is-active" class to fully hide the alert
//         alertBar.addEventListener("transitionend", function() {
//             alertBar.classList.remove("is-active");
//         });
//     });
// });
